apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.google.protobuf'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.7.0'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    compile 'com.google.protobuf:protobuf-java:3.0.0-beta-1'
    compile 'com.google.protobuf:protobuf-java-util:3.0.0-beta-1'
    compile 'org.eclipse.jgit:org.eclipse.jgit:4.2.0.201601211800-r'
    compile 'org.apache.maven:maven-model:3.3.1'
    compile 'com.github.Praqma:commit-message-parser:5517b84b0a'
    compile 'com.jcabi:jcabi-manifests:1.1'
    checkstyle 'com.puppycrawl.tools:checkstyle:5.9'
    pmd        'net.sourceforge.pmd:pmd-java:5.2.3'
    findbugs   'com.google.code.findbugs:findbugs:3.0.1'
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            // include self written and generated code
            srcDirs 'src/main/java', 'generated-sources/main/java'
        }
    }
}

jar {
    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } 
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' 
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.0-alpha-3'
    }

    generateProtoTasks.generatedFilesBaseDir = 'src'

    generateProtoTasks {
        // all() returns the collection of all protoc tasks
        all().each { task ->
            // Here you can configure the task
        }

        // In addition to all(), you may get the task collection by various
        // criteria:

        // (Java only) returns tasks for a sourceSet
        ofSourceSet('main')

    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'net.praqma.tracey.protocol'
            artifactId 'tracey-protocol-eiffel'
            from components.java
        }
    }
}

// Static code analysis

// Exclude generated events
def excludePatternAntStyle = ['**/net/praqma/tracey/protocol/eiffel/events/*', '**/net/praqma/tracey/protocol/eiffel/models/*']

tasks.withType(Pmd) {
    exclude excludePatternAntStyle
}

tasks.withType(Checkstyle) {
    exclude excludePatternAntStyle
}

tasks.withType(FindBugs) {
    excludeFilter file("./config/findbugs/excludeFilter.xml")
    ignoreFailures false
    reports {
        xml.enabled false
        html.enabled true
    }
}